name: "Main Build"

on:
  workflow_dispatch:

env:
  CI_BUILD_WORKFLOW: "continuous-integration.yaml" # Name of the workflow that should be triggered for CI builds
  RELEASE_ARTIFACT_NAME: "release-artifacts" # Name of the artifact that should be downloaded from the CI build workflow
  COMMIT_SHA: ${{ github.sha }}
  BRANCH_NAME: ${{ github.ref_name }}
  MVN_CLI_ARGS: "--batch-mode --no-transfer-progress --fail-at-end --show-version --threads 1C"

jobs:
  run-ci:
    name: "Continuous Integration"
    runs-on: ubuntu-latest
    outputs:
      ci-run-id: ${{ steps.trigger-ci.outputs.run-id }}
    permissions:
      actions: write # needed to trigger the ci-build workflow
      statuses: write # needed to update the commit status
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Trigger CI Workflow"
        id: trigger-ci
        uses: ./.github/actions/trigger-workflow
        with:
          workflow: ${{ env.CI_BUILD_WORKFLOW }}
          workflow-ref: ${{ env.BRANCH_NAME }}
          commit-sha: ${{ env.COMMIT_SHA }}
          parameters: >
            -f commit=${{ env.COMMIT_SHA }}
            -f build-release-artifacts=true

      - name: "Await CI Workflow"
        uses: ./.github/actions/await-workflow
        with:
          run-id: ${{ steps.trigger-ci.outputs.run-id }}
          commit-status: "Continuous Integration Workflow"

  deploy-snapshot:
    name: "Deploy Snapshot"
    needs: [ run-ci ]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read # needed to download the artifacts from the ci-build workflow
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Deploy Snapshot"
        uses: ./.github/actions/deploy-snapshot
        with:
          ci-run-id: ${{ needs.run-ci.outputs.ci-run-id }}
          repository-url: "https://common.repositories.cloud.sap/artifactory/build-snapshots-cloudsdk"
          repository-username: ${{ secrets.ARTIFACTORY_USER }}
          repository-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          release-artifact-name: ${{ env.RELEASE_ARTIFACT_NAME }}
